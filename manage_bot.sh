#!/bin/bash

BOT_NAME="VeilBot"
BOT_PROCESS="python3 bot.py"
LOG_DIR="logs"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PID –±–æ—Ç–∞
get_bot_pid() {
    pgrep -f "$BOT_PROCESS"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
status() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è $BOT_NAME...${NC}"
    
    BOT_PID=$(get_bot_pid)
    
    if [ -z "$BOT_PID" ]; then
        print_error "$BOT_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    
    print_status "$BOT_NAME –∑–∞–ø—É—â–µ–Ω (PID: $BOT_PID)"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    PROCESS_INFO=$(ps -o pid,ppid,cmd,%mem,%cpu --no-headers -p $BOT_PID)
    echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    echo "$PROCESS_INFO"
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
    if [ -d "$LOG_DIR" ]; then
        LATEST_LOG=$(ls -t $LOG_DIR/bot_*.log 2>/dev/null | head -1)
        if [ -n "$LATEST_LOG" ]; then
            echo ""
            print_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
            echo "üìÅ $LATEST_LOG"
            echo "--- –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ ---"
            tail -5 "$LATEST_LOG"
        fi
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞
start() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ $BOT_NAME...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –±–æ—Ç
    if get_bot_pid > /dev/null; then
        print_warning "$BOT_NAME —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
        status
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if [ ! -f "bot.py" ]; then
        print_error "–§–∞–π–ª bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    if [ ! -f ".env" ]; then
        print_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p $LOG_DIR
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    nohup $BOT_PROCESS > $LOG_DIR/bot_$(date +%Y%m%d_%H%M%S).log 2>&1 &
    BOT_PID=$!
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞
    sleep 3
    if ps -p $BOT_PID > /dev/null; then
        print_status "$BOT_NAME —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (PID: $BOT_PID)"
        return 0
    else
        print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ $BOT_NAME"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop() {
    echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ $BOT_NAME...${NC}"
    
    BOT_PID=$(get_bot_pid)
    
    if [ -z "$BOT_PID" ]; then
        print_warning "$BOT_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 0
    fi
    
    print_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–æ—Ü–µ—Å—Å PID: $BOT_PID"
    kill -TERM $BOT_PID
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    sleep 2
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if ps -p $BOT_PID > /dev/null; then
        print_warning "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        kill -KILL $BOT_PID
        sleep 1
    fi
    
    if ps -p $BOT_PID > /dev/null; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $BOT_NAME"
        return 1
    else
        print_status "$BOT_NAME —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ $BOT_NAME...${NC}"
    
    stop
    sleep 2
    start
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
logs() {
    if [ -d "$LOG_DIR" ]; then
        LATEST_LOG=$(ls -t $LOG_DIR/bot_*.log 2>/dev/null | head -1)
        if [ -n "$LATEST_LOG" ]; then
            echo -e "${BLUE}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ $BOT_NAME:${NC}"
            echo "üìÅ $LATEST_LOG"
            echo "--- –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞ ---"
            tail -f "$LATEST_LOG"
        else
            print_error "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        print_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
clean_logs() {
    echo -e "${BLUE}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤...${NC}"
    
    if [ -d "$LOG_DIR" ]; then
        # –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
        find $LOG_DIR -name "bot_*.log" -mtime +7 -delete
        print_status "–°—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
    else
        print_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–º–æ—â–∏
help() {
    echo -e "${BLUE}üìñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ $BOT_NAME${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  clean     - –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    logs)
        logs
        ;;
    clean)
        clean_logs
        ;;
    help|*)
        help
        ;;
esac

